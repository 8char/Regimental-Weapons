class Network extends AtlasUI.Network
    constructor(...)
        super(...)

        self:setPrefix("RegimentalWeapons.")
        self:prepare({
            "WeaponRequest",
            "OpenMenu",
        })

        self:receiver("WeaponRequest",  self.receiveWeaponRequest)
    end

    openMenu(target)
        self:send("OpenMenu", target, () ->
            self:compress(
                GAS.JobWhitelist:GetPlayerAccessibleJobs(target) or {}
            )
        end)
    end

    receiveWeaponRequest(ply)
        local team = ply:Team()
        local id = net.ReadString()
        local cfg = RegimentalWeapons.Config
        local loadoutJob = cfg.ChoiceLoadouts

        stopif not loadoutJob
        if cfg.ChoiceLoadouts[team] then
            for _, loadouts in ipairs(cfg.ChoiceLoadouts[team]) do
                if table.HasValue(loadouts.weapons, id) then
                    for _, weaponId in ipairs(loadouts.weapons) do
                        if weaponId == id then
                            ply:Give(weaponId)
                        end
                    end
                end
            end
        else
            local jobs = cfg.ChoiceJobs[team]
            if not jobs then return end
    
            for _, v in ipairs(jobs) do
                if v.weaponId == id then
                    ply:Give(id)
                end
            end
        end
    end
end

RegimentalWeapons.Network = Network()
